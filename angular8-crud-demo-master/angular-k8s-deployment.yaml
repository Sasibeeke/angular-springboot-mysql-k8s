---
# Source: angular-k8s-service/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: angular-k8s-service
  labels:
    helm.sh/chart: angular-k8s-service-0.1.0
    app.kubernetes.io/name: angular-k8s-service
    app.kubernetes.io/instance: angular-k8s-deployment
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
spec:
  ports:
  - nodePort: 30170
    port: 80        # access the service via external port no
    targetPort: 80  # port number that container listening on
    protocol: TCP
  selector:
    app.kubernetes.io/name: angular-k8s-service
    app.kubernetes.io/instance: angular-k8s-deployment
  type: NodePort     # which expose the application on a port across each of your nodes
---
# Source: angular-k8s-service/templates/deployment.yaml
apiVersion: apps/v1 # For versions before 1.9.0 use apps/v1beta2
kind: Deployment
metadata:   # Data that helps  uniquely identify the object (using name, UID and namespace)
  name: angular-k8s-deployment
spec:  # What state you desire for the object
  selector:  # The selector field defines how the deployment finds which pod to manage
    matchLabels:
      app.kubernetes.io/name: angular-k8s-service
      app.kubernetes.io/instance: angular-k8s-deployment
  replicas: 3  # Tells the deployment to run 3 pods matching the template
  template:
    metadata:
      labels:  # Labels are used as identifying attributes for objects such as pods and replication controller.
        helm.sh/chart: angular-k8s-service-0.1.0
        app.kubernetes.io/name: angular-k8s-service
        app.kubernetes.io/instance: angular-k8s-deployment
        app.kubernetes.io/version: "1.16.0"
        app.kubernetes.io/managed-by: Helm
    spec:
      containers:
        - name: angular-k8s-deployment
          image: angular-app:latest
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 80
---
# Source: angular-k8s-service/templates/tests/test-connection.yaml
apiVersion: v1
kind: Pod
metadata:
  name: "angular-k8s-deployment-angular-k8s-service-test-connection"
  labels:
    helm.sh/chart: angular-k8s-service-0.1.0
    app.kubernetes.io/name: angular-k8s-service
    app.kubernetes.io/instance: angular-k8s-deployment
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
  annotations:
    "helm.sh/hook": test
spec:
  containers:
    - name: wget
      image: busybox
      command: ['wget']
      args: ['angular-k8s-deployment-angular-k8s-service:80']
  restartPolicy: Never
